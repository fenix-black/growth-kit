var t;function y(e){let p=e.referralPath||"/r",n=e.redirectTo||"/";return async function(o,m){t||(t=(await import("next/server")).NextResponse);let s=o.nextUrl.pathname;if(s.startsWith("/api/growthkit/")){let i=s.replace("/api/growthkit","");e.debug&&console.log("[GrowthKit] Proxying API request to:",i);try{let r=`${e.apiUrl}${i}`,a={"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`};["X-Fingerprint","User-Agent","Accept-Language"].forEach(d=>{let h=o.headers.get(d);h&&(a[d]=h)});let g;o.method!=="GET"&&o.method!=="HEAD"&&(g=await o.text());let c=await fetch(r,{method:o.method,headers:a,body:g}),x=await c.text();e.debug&&console.log("[GrowthKit] Proxy response status:",c.status);let K=t.next(),l=new t(x,{status:c.status,statusText:c.statusText});return["Content-Type"].forEach(d=>{let h=c.headers.get(d);h&&l.headers.set(d,h)}),l.headers.set("Access-Control-Allow-Origin","*"),l.headers.set("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),l.headers.set("Access-Control-Allow-Headers","Content-Type, Authorization, X-Fingerprint"),l}catch(r){return e.debug&&console.error("[GrowthKit] Proxy error:",r),new t(JSON.stringify({error:"Proxy request failed",message:r instanceof Error?r.message:"Unknown error"}),{status:500,headers:{"Content-Type":"application/json"}})}}if(s==="/verify"){let i=o.nextUrl.searchParams.get("token");if(!i){e.debug&&console.warn("[GrowthKit] Missing verification token");let r=new URL(n,o.url);return r.searchParams.set("verified","false"),r.searchParams.set("error","missing-token"),t.redirect(r)}e.debug&&console.log("[GrowthKit] Processing email verification with token");try{let r=await fetch(`${e.apiUrl}/v1/verify/email`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({token:i})}),a=new URL(n,o.url);return r.ok?(e.debug&&console.log("[GrowthKit] Email verified successfully"),a.searchParams.set("verified","true")):(e.debug&&console.error("[GrowthKit] Email verification failed:",r.status),a.searchParams.set("verified","false")),t.redirect(a)}catch(r){e.debug&&console.error("[GrowthKit] Error verifying email:",r);let a=new URL(n,o.url);return a.searchParams.set("verified","false"),a.searchParams.set("error","verification-failed"),t.redirect(a)}}if(s.startsWith("/invite/")){let i=s.slice(8).split("/")[0];if(!i)return e.debug&&console.warn("[GrowthKit] No invitation code found in path:",s),t.redirect(new URL(n,o.url));e.debug&&console.log("[GrowthKit] Processing invitation code:",i);let r=new URL(n,o.url);return r.searchParams.set("ref",i),e.debug&&console.log("[GrowthKit] Redirecting with invitation code to:",r.toString()),t.redirect(r)}if(!s.startsWith(p+"/"))return t.next();let u=s.slice(p.length+1).split("/")[0];if(!u)return e.debug&&console.warn("[GrowthKit] No referral code found in path:",s),t.redirect(new URL(n,o.url));e.debug&&console.log("[GrowthKit] Processing referral code:",u);try{let i=await fetch(`${e.apiUrl}/v1/referral/exchange`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({referralCode:u})});if(!i.ok)return e.debug&&console.error("[GrowthKit] Failed to exchange referral code:",i.status),t.redirect(new URL(n,o.url));let a=(await i.json()).data?.claim;if(!a)return e.debug&&console.error("[GrowthKit] No claim token received from exchange"),t.redirect(new URL(n,o.url));let f=new URL(n,o.url);return f.searchParams.set("ref",a),e.debug&&console.log("[GrowthKit] Redirecting with claim token to:",f.toString()),t.redirect(f)}catch(i){return e.debug&&console.error("[GrowthKit] Error processing referral:",i),t.redirect(new URL(n,o.url))}}}async function v(e,p){let n=process.env.GROWTHKIT_API_KEY,w=process.env.GROWTHKIT_API_URL;return!n||!w?(console.error("[GrowthKit] GROWTHKIT_API_KEY and GROWTHKIT_API_URL environment variables are required"),t||(t=(await import("next/server")).NextResponse),t.next()):y({apiKey:n,apiUrl:w,debug:process.env.NODE_ENV==="development"})(e,p)}var U=v,G={matcher:["/r/:path*","/verify","/invite/:path*","/api/growthkit/:path*"]};export{G as config,U as middleware};
//# sourceMappingURL=auto-middleware.mjs.map