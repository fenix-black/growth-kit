"use strict";var R=Object.create;var u=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var E=(e,n)=>{for(var t in n)u(e,t,{get:n[t],enumerable:!0})},m=(e,n,t,l)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of U(n))!b.call(e,r)&&r!==t&&u(e,r,{get:()=>n[r],enumerable:!(l=T(n,r))||l.enumerable});return e};var y=(e,n,t)=>(t=e!=null?R(G(e)):{},m(n||!e||!e.__esModule?u(t,"default",{value:e,enumerable:!0}):t,e)),A=e=>m(u({},"__esModule",{value:!0}),e);var L={};E(L,{createGrowthKitMiddleware:()=>x,growthKitMiddleware:()=>N});module.exports=A(L);var i;function x(e){let n=e.referralPath||"/r",t=e.redirectTo||"/";return async function(r,K){i||(i=(await import("next/server")).NextResponse);let c=r.nextUrl.pathname;if(c.startsWith("/api/growthkit/")){let s=c.replace("/api/growthkit","");e.debug&&console.log("[GrowthKit] Proxying API request to:",s);try{let o=`${e.apiUrl}${s}`,a={"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`};["X-Fingerprint","User-Agent","Accept-Language"].forEach(f=>{let w=r.headers.get(f);w&&(a[f]=w)});let v;r.method!=="GET"&&r.method!=="HEAD"&&(v=await r.text());let d=await fetch(o,{method:r.method,headers:a,body:v}),P=await d.text();e.debug&&console.log("[GrowthKit] Proxy response status:",d.status);let O=i.next(),h=new i(P,{status:d.status,statusText:d.statusText});return["Content-Type"].forEach(f=>{let w=d.headers.get(f);w&&h.headers.set(f,w)}),h.headers.set("Access-Control-Allow-Origin","*"),h.headers.set("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),h.headers.set("Access-Control-Allow-Headers","Content-Type, Authorization, X-Fingerprint"),h}catch(o){return e.debug&&console.error("[GrowthKit] Proxy error:",o),new i(JSON.stringify({error:"Proxy request failed",message:o instanceof Error?o.message:"Unknown error"}),{status:500,headers:{"Content-Type":"application/json"}})}}if(c==="/verify"){let s=r.nextUrl.searchParams.get("token");if(!s){e.debug&&console.warn("[GrowthKit] Missing verification token");let o=new URL(t,r.url);return o.searchParams.set("verified","false"),o.searchParams.set("error","missing-token"),i.redirect(o)}e.debug&&console.log("[GrowthKit] Processing email verification with token");try{let o=await fetch(`${e.apiUrl}/v1/verify/email`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({token:s})}),a=new URL(t,r.url);return o.ok?(e.debug&&console.log("[GrowthKit] Email verified successfully"),a.searchParams.set("verified","true")):(e.debug&&console.error("[GrowthKit] Email verification failed:",o.status),a.searchParams.set("verified","false")),i.redirect(a)}catch(o){e.debug&&console.error("[GrowthKit] Error verifying email:",o);let a=new URL(t,r.url);return a.searchParams.set("verified","false"),a.searchParams.set("error","verification-failed"),i.redirect(a)}}if(c.startsWith("/invite/")){let s=c.slice(8).split("/")[0];if(!s)return e.debug&&console.warn("[GrowthKit] No invitation code found in path:",c),i.redirect(new URL(t,r.url));e.debug&&console.log("[GrowthKit] Processing invitation code:",s);let o=new URL(t,r.url);return o.searchParams.set("ref",s),e.debug&&console.log("[GrowthKit] Redirecting with invitation code to:",o.toString()),i.redirect(o)}if(!c.startsWith(n+"/"))return i.next();let g=c.slice(n.length+1).split("/")[0];if(!g)return e.debug&&console.warn("[GrowthKit] No referral code found in path:",c),i.redirect(new URL(t,r.url));e.debug&&console.log("[GrowthKit] Processing referral code:",g);try{let s=await fetch(`${e.apiUrl}/v1/referral/exchange`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({referralCode:g})});if(!s.ok)return e.debug&&console.error("[GrowthKit] Failed to exchange referral code:",s.status),i.redirect(new URL(t,r.url));let a=(await s.json()).data?.claim;if(!a)return e.debug&&console.error("[GrowthKit] No claim token received from exchange"),i.redirect(new URL(t,r.url));let p=new URL(t,r.url);return p.searchParams.set("ref",a),e.debug&&console.log("[GrowthKit] Redirecting with claim token to:",p.toString()),i.redirect(p)}catch(s){return e.debug&&console.error("[GrowthKit] Error processing referral:",s),i.redirect(new URL(t,r.url))}}}async function N(e,n){let t=process.env.GROWTHKIT_API_KEY,l=process.env.GROWTHKIT_API_URL;return!t||!l?(console.error("[GrowthKit] GROWTHKIT_API_KEY and GROWTHKIT_API_URL environment variables are required"),i||(i=(await import("next/server")).NextResponse),i.next()):x({apiKey:t,apiUrl:l,debug:process.env.NODE_ENV==="development"})(e,n)}0&&(module.exports={createGrowthKitMiddleware,growthKitMiddleware});
