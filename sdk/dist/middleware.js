"use strict";var v=Object.create;var h=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var U=(e,i)=>{for(var r in i)h(e,r,{get:i[r],enumerable:!0})},w=(e,i,r,d)=>{if(i&&typeof i=="object"||typeof i=="function")for(let t of K(i))!x.call(e,t)&&t!==r&&h(e,t,{get:()=>i[t],enumerable:!(d=g(i,t))||d.enumerable});return e};var u=(e,i,r)=>(r=e!=null?v(R(e)):{},w(i||!e||!e.__esModule?h(r,"default",{value:e,enumerable:!0}):r,e)),P=e=>w(h({},"__esModule",{value:!0}),e);var G={};U(G,{createGrowthKitMiddleware:()=>m,growthKitMiddleware:()=>y});module.exports=P(G);var o;function m(e){let i=e.referralPath||"/r",r=e.redirectTo||"/";return async function(t,p){o||(o=(await import("next/server")).NextResponse);let l=t.nextUrl.pathname;if(l==="/verify"){let n=t.nextUrl.searchParams.get("token"),c=t.nextUrl.searchParams.get("email");if(!n||!c){e.debug&&console.warn("[GrowthKit] Missing verification token or email");let a=new URL(r,t.url);return a.searchParams.set("verified","false"),a.searchParams.set("error","missing-params"),o.redirect(a)}e.debug&&console.log("[GrowthKit] Processing email verification for:",c);try{let a=await fetch(`${e.apiUrl}/v1/verify/email`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({token:n,email:decodeURIComponent(c)})}),s=new URL(r,t.url);return a.ok?(e.debug&&console.log("[GrowthKit] Email verified successfully"),s.searchParams.set("verified","true")):(e.debug&&console.error("[GrowthKit] Email verification failed:",a.status),s.searchParams.set("verified","false")),o.redirect(s)}catch(a){e.debug&&console.error("[GrowthKit] Error verifying email:",a);let s=new URL(r,t.url);return s.searchParams.set("verified","false"),s.searchParams.set("error","verification-failed"),o.redirect(s)}}if(l.startsWith("/invite/")){let n=l.slice(8).split("/")[0];if(!n)return e.debug&&console.warn("[GrowthKit] No invitation code found in path:",l),o.redirect(new URL(r,t.url));e.debug&&console.log("[GrowthKit] Processing invitation code:",n);let c=new URL(r,t.url);return c.searchParams.set("ref",n),e.debug&&console.log("[GrowthKit] Redirecting with invitation code to:",c.toString()),o.redirect(c)}if(!l.startsWith(i+"/"))return o.next();let f=l.slice(i.length+1).split("/")[0];if(!f)return e.debug&&console.warn("[GrowthKit] No referral code found in path:",l),o.redirect(new URL(r,t.url));e.debug&&console.log("[GrowthKit] Processing referral code:",f);try{let n=await fetch(`${e.apiUrl}/v1/referral/exchange`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({referralCode:f})});if(!n.ok)return e.debug&&console.error("[GrowthKit] Failed to exchange referral code:",n.status),o.redirect(new URL(r,t.url));let a=(await n.json()).data?.claim;if(!a)return e.debug&&console.error("[GrowthKit] No claim token received from exchange"),o.redirect(new URL(r,t.url));let s=new URL(r,t.url);return s.searchParams.set("ref",a),e.debug&&console.log("[GrowthKit] Redirecting with claim token to:",s.toString()),o.redirect(s)}catch(n){return e.debug&&console.error("[GrowthKit] Error processing referral:",n),o.redirect(new URL(r,t.url))}}}async function y(e,i){let r=process.env.GROWTHKIT_API_KEY,d=process.env.GROWTHKIT_API_URL;return!r||!d?(console.error("[GrowthKit] GROWTHKIT_API_KEY and GROWTHKIT_API_URL environment variables are required"),o||(o=(await import("next/server")).NextResponse),o.next()):m({apiKey:r,apiUrl:d,debug:process.env.NODE_ENV==="development"})(e,i)}0&&(module.exports={createGrowthKitMiddleware,growthKitMiddleware});
//# sourceMappingURL=middleware.js.map