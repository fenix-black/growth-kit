var o=class{constructor(t){this.apiKey=t.apiKey,this.apiUrl=t.apiUrl||process.env.GROWTHKIT_API_URL||"http://localhost:3000/api"}async getUser(t){let e=await fetch(`${this.apiUrl}/v1/me`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({fingerprint:t})});if(!e.ok)throw new Error(`Failed to get user: ${e.statusText}`);return e.json()}async completeAction(t,e="default",n){let i=await fetch(`${this.apiUrl}/v1/complete`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({fingerprint:t,action:e,metadata:n})});if(!i.ok)throw new Error(`Failed to complete action: ${i.statusText}`);return i.json()}async addToWaitlist(t,e,n){let i=await fetch(`${this.apiUrl}/v1/waitlist`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({email:t,fingerprint:e,metadata:n})});if(!i.ok)throw new Error(`Failed to add to waitlist: ${i.statusText}`);return i.json()}async exchangeReferralCode(t){let e=await fetch(`${this.apiUrl}/v1/referral/exchange`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({code:t})});if(!e.ok)throw new Error(`Failed to exchange referral code: ${e.statusText}`);return e.json()}};function a(r){return r.headers.get("x-fingerprint")}function s(r){return r.cookies.get("ref_claim")?.value||null}function p(){let r=process.env.GROWTHKIT_API_KEY;if(!r)throw new Error("GROWTHKIT_API_KEY environment variable is required");return new o({apiKey:r,apiUrl:process.env.GROWTHKIT_API_URL})}export{o as GrowthKitServer,p as createGrowthKitServer,a as getFingerprintFromRequest,s as getReferralClaimFromRequest};
