var r;function w(e){let l=e.referralPath||"/r",i=e.redirectTo||"/";return async function(t,f){r||(r=(await import("next/server")).NextResponse);let s=t.nextUrl.pathname;if(s==="/verify"){let o=t.nextUrl.searchParams.get("token"),c=t.nextUrl.searchParams.get("email");if(!o||!c){e.debug&&console.warn("[GrowthKit] Missing verification token or email");let n=new URL(i,t.url);return n.searchParams.set("verified","false"),n.searchParams.set("error","missing-params"),r.redirect(n)}e.debug&&console.log("[GrowthKit] Processing email verification for:",c);try{let n=await fetch(`${e.apiUrl}/v1/verify/email`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({token:o})}),a=new URL(i,t.url);return n.ok?(e.debug&&console.log("[GrowthKit] Email verified successfully"),a.searchParams.set("verified","true")):(e.debug&&console.error("[GrowthKit] Email verification failed:",n.status),a.searchParams.set("verified","false")),r.redirect(a)}catch(n){e.debug&&console.error("[GrowthKit] Error verifying email:",n);let a=new URL(i,t.url);return a.searchParams.set("verified","false"),a.searchParams.set("error","verification-failed"),r.redirect(a)}}if(s.startsWith("/invite/")){let o=s.slice(8).split("/")[0];if(!o)return e.debug&&console.warn("[GrowthKit] No invitation code found in path:",s),r.redirect(new URL(i,t.url));e.debug&&console.log("[GrowthKit] Processing invitation code:",o);let c=new URL(i,t.url);return c.searchParams.set("ref",o),e.debug&&console.log("[GrowthKit] Redirecting with invitation code to:",c.toString()),r.redirect(c)}if(!s.startsWith(l+"/"))return r.next();let h=s.slice(l.length+1).split("/")[0];if(!h)return e.debug&&console.warn("[GrowthKit] No referral code found in path:",s),r.redirect(new URL(i,t.url));e.debug&&console.log("[GrowthKit] Processing referral code:",h);try{let o=await fetch(`${e.apiUrl}/v1/referral/exchange`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({referralCode:h})});if(!o.ok)return e.debug&&console.error("[GrowthKit] Failed to exchange referral code:",o.status),r.redirect(new URL(i,t.url));let n=(await o.json()).data?.claim;if(!n)return e.debug&&console.error("[GrowthKit] No claim token received from exchange"),r.redirect(new URL(i,t.url));let a=new URL(i,t.url);return a.searchParams.set("ref",n),e.debug&&console.log("[GrowthKit] Redirecting with claim token to:",a.toString()),r.redirect(a)}catch(o){return e.debug&&console.error("[GrowthKit] Error processing referral:",o),r.redirect(new URL(i,t.url))}}}async function u(e,l){let i=process.env.GROWTHKIT_API_KEY,d=process.env.GROWTHKIT_API_URL;return!i||!d?(console.error("[GrowthKit] GROWTHKIT_API_KEY and GROWTHKIT_API_URL environment variables are required"),r||(r=(await import("next/server")).NextResponse),r.next()):w({apiKey:i,apiUrl:d,debug:process.env.NODE_ENV==="development"})(e,l)}export{w as createGrowthKitMiddleware,u as growthKitMiddleware};
//# sourceMappingURL=middleware.mjs.map